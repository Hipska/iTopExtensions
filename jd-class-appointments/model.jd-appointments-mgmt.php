						<?php
//
// File generated by ... on the 2020-05-25T11:15:35+0200
// Please do not edit manually
//

/**
 * Classes and menus for jd-appointments-mgmt (version 2.6.0)
 *
 * @author      iTop compiler
 * @license     http://opensource.org/licenses/AGPL-3.0
 */


/**
				 * Persistent classes for a CMDB
				 *
				 * @copyright   Copyright (C) 2010-2012 Combodo SARL
				 * @license     http://opensource.org/licenses/AGPL-3.0
				 */
abstract class Appointment extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'finalclass'),
			'db_table' => 'appointment',
			'db_key_field' => 'id',
			'db_finalclass_field' => 'finalclass',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("allowed_values"=>null, "sql"=>'name', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("org_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'org_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("org_name", array("allowed_values"=>null, "extkey_attcode"=>'org_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("person_id", array("targetclass"=>'Person', "allowed_values"=>new ValueSetObjects("SELECT Person AS p WHERE p.org_id = :this->org_id"), "sql"=>'person_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array('org_id'), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDateTime("start_date", array("allowed_values"=>null, "sql"=>'start_date', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDateTime("last_update", array("allowed_values"=>null, "sql"=>'last_update', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDateTime("duration", array("allowed_values"=>null, "sql"=>'duration', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("comments", array("allowed_values"=>null, "sql"=>'comments', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("status", array("allowed_values"=>new ValueSetEnum("0,1,2,3"), "display_style"=>'list', "sql"=>'status', "default_value"=>'0', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("available", array("allowed_values"=>new ValueSetEnum("0,1,2"), "display_style"=>'list', "sql"=>'available', "default_value"=>'0', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeInteger("booth", array("allowed_values"=>null, "sql"=>'booth', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeIPAddress("ip", array("allowed_values"=>null, "sql"=>'ip', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("code", array("allowed_values"=>null, "sql"=>'code', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'org_name',
  3 => 'person_id',
  4 => 'start_date',
  5 => 'last_update',
  6 => 'duration',
  7 => 'comments',
  8 => 'status',
  9 => 'available',
  10 => 'booth',
  11 => 'ip',
  12 => 'code',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'person_id',
  2 => 'start_date',
));
		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
  1 => 'person_id',
  2 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'name',
  1 => 'person_id',
  2 => 'start_date',
));
;
	}




		protected function OnInsert()
		{
			$this->Set('last_update', time());
		}



		protected function OnUpdate()
		{
			$this->Set('last_update', time());
		}


	public function GetAttributeFlags($sAttCode, &$aReasons = Array, $sTargetState = '')
						{
							if(in_array($sAttCode, array("start_date", "last_update", "duration")))
							{
								return OPT_ATT_READONLY;
							}
							return parent::GetAttributeFlags($sAttCode);
						}
					


	public function GetInitialStateAttributeFlags($sAttCode, &$aReasons = array())
						{
							if(in_array($sAttCode, array("start_date", "last_update", "duration")))
							{
								return OPT_ATT_READONLY;
							}
							return parent::GetAttributeFlags($sAttCode);
						}
					

}


class AppointmentEnergy extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentenergy',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentTour extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentenergy',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentTax extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmenttax',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall1 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'duration', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall1',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("national_number", array("allowed_values"=>null, "sql"=>'national_number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'national_number',
      3 => 'start_date',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall2 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'duration', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall2',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("national_number", array("allowed_values"=>null, "sql"=>'national_number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'national_number',
      3 => 'start_date',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall3 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'duration', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall3',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("national_number", array("allowed_values"=>null, "sql"=>'national_number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'national_number',
      3 => 'start_date',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall4 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall4',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall5 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall5',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("national_number", array("allowed_values"=>null, "sql"=>'national_number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'national_number',
      3 => 'start_date',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall6 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall6',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall7 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall7',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall8 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall8',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall9 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall9',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("national_number", array("allowed_values"=>null, "sql"=>'national_number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'national_number',
      3 => 'start_date',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall10 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall10',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("national_number", array("allowed_values"=>null, "sql"=>'national_number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'national_number',
      3 => 'start_date',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCityHall11 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'duration', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcityhall11',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("national_number", array("allowed_values"=>null, "sql"=>'national_number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'national_number',
      3 => 'start_date',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCareCenter1 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcarecenter1',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeEncryptedString("roomnumber", array("allowed_values"=>null, "sql"=>'roomnumber', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("location", array("allowed_values"=>new ValueSetEnum("1,2"), "display_style"=>'list', "sql"=>'location', "default_value"=>'1', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'roomnumber',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
      3 => 'location',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCareCenter2 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcarecenter2',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeEncryptedString("roomnumber", array("allowed_values"=>null, "sql"=>'roomnumber', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("location", array("allowed_values"=>new ValueSetEnum("1,2"), "display_style"=>'list', "sql"=>'location', "default_value"=>'1', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'roomnumber',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
      3 => 'location',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCareCenter3 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcarecenter3',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeEncryptedString("roomnumber", array("allowed_values"=>null, "sql"=>'roomnumber', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("location", array("allowed_values"=>new ValueSetEnum("1,2"), "display_style"=>'list', "sql"=>'location', "default_value"=>'1', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'roomnumber',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
      3 => 'location',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCareCenter4 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcarecenter4',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeEncryptedString("roomnumber", array("allowed_values"=>null, "sql"=>'roomnumber', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("location", array("allowed_values"=>new ValueSetEnum("1,2"), "display_style"=>'list', "sql"=>'location', "default_value"=>'1', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'roomnumber',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
      3 => 'location',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}


class AppointmentCareCenter5 extends Appointment
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name', 'person_id', 'start_date', 'last_update', 'comments', 'status', 'available', 'booth', 'ip', 'code'),
			'db_table' => 'appointmentcarecenter5',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jd-appointments-mgmt/images/appointment.png',);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeEncryptedString("roomnumber", array("allowed_values"=>null, "sql"=>'roomnumber', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("location", array("allowed_values"=>new ValueSetEnum("1,2"), "display_style"=>'list', "sql"=>'location', "default_value"=>'1', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Appointment:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'person_id',
      2 => 'start_date',
      3 => 'roomnumber',
      4 => 'comments',
    ),
    'fieldset:Appointment:moreinfo' => 
    array (
      0 => 'last_update',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Appointment:status' => 
    array (
      0 => 'status',
      1 => 'booth',
      2 => 'code',
    ),
    'fieldset:Appointment:details' => 
    array (
      0 => 'available',
      1 => 'ip',
      2 => 'duration',
      3 => 'location',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'person_id',
  1 => 'start_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'person_id',
  1 => 'start_date',
  2 => 'status',
  3 => 'booth',
));
;
	}


}
//
// Menus
//
class MenuCreation_jd_appointments_mgmt extends ModuleHandlerAPI
{
	public static function OnMenuCreation()
	{
		global $__comp_menus__; // ensure that the global variable is indeed global !
		$__comp_menus__['AppointmentEnergyMgmt'] = new MenuGroup('AppointmentEnergyMgmt', 43 , 'AppointmentEnergy', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentEnergy'] = new SearchMenuNode('SearchAppointmentEnergy', 'AppointmentEnergy', $__comp_menus__['AppointmentEnergyMgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['AppointmentTourMgmt'] = new MenuGroup('AppointmentTourMgmt', 45 , 'AppointmentTour', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentTour'] = new SearchMenuNode('SearchAppointmentTour', 'AppointmentTour', $__comp_menus__['AppointmentTourMgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['AppointmentTaxMgmt'] = new MenuGroup('AppointmentTaxMgmt', 46 , 'AppointmentTax', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentTax'] = new SearchMenuNode('SearchAppointmentTax', 'AppointmentTax', $__comp_menus__['AppointmentTaxMgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['AppointmentCityHall1Mgmt'] = new MenuGroup('AppointmentCityHall1Mgmt', 47 , 'AppointmentCityHall1', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall1'] = new SearchMenuNode('SearchAppointmentCityHall1', 'AppointmentCityHall1', $__comp_menus__['AppointmentCityHall1Mgmt']->GetIndex(), 10, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall2'] = new SearchMenuNode('SearchAppointmentCityHall2', 'AppointmentCityHall2', $__comp_menus__['AppointmentCityHall1Mgmt']->GetIndex(), 15, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall11'] = new SearchMenuNode('SearchAppointmentCityHall11', 'AppointmentCityHall11', $__comp_menus__['AppointmentCityHall1Mgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall3'] = new SearchMenuNode('SearchAppointmentCityHall3', 'AppointmentCityHall3', $__comp_menus__['AppointmentCityHall1Mgmt']->GetIndex(), 25, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['ShortcutCityHall1'] = new TemplateMenuNode('ShortcutCityHall1', '', $__comp_menus__['AppointmentCityHall1Mgmt']->GetIndex(), 50 , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchNowAppointmentCityHall1'] = new OQLMenuNode('SearchNowAppointmentCityHall1', "SELECT AppointmentCityHall1 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCityHall1']->GetIndex(), 11, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall1']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['SearchNowAppointmentCityHall2'] = new OQLMenuNode('SearchNowAppointmentCityHall2', "SELECT AppointmentCityHall2 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCityHall1']->GetIndex(), 16, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall2']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['SearchNowAppointmentCityHall11'] = new OQLMenuNode('SearchNowAppointmentCityHall11', "SELECT AppointmentCityHall11 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCityHall1']->GetIndex(), 21, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall11']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['SearchNowAppointmentCityHall3'] = new OQLMenuNode('SearchNowAppointmentCityHall3', "SELECT AppointmentCityHall3 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCityHall1']->GetIndex(), 26, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall3']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['AppointmentCityHall4Mgmt'] = new MenuGroup('AppointmentCityHall4Mgmt', 50 , 'AppointmentCityHall4', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall4'] = new SearchMenuNode('SearchAppointmentCityHall4', 'AppointmentCityHall4', $__comp_menus__['AppointmentCityHall4Mgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchNowAppointmentCityHall4'] = new OQLMenuNode('SearchNowAppointmentCityHall4', "SELECT AppointmentCityHall4 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['AppointmentCityHall4Mgmt']->GetIndex(), 30, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall4']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['AppointmentCityHall5Mgmt'] = new MenuGroup('AppointmentCityHall5Mgmt', 51 , 'AppointmentCityHall5', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall5'] = new SearchMenuNode('SearchAppointmentCityHall5', 'AppointmentCityHall5', $__comp_menus__['AppointmentCityHall5Mgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchNowAppointmentCityHall5'] = new OQLMenuNode('SearchNowAppointmentCityHall5', "SELECT AppointmentCityHall5 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['AppointmentCityHall5Mgmt']->GetIndex(), 30, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall5']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['AppointmentCityHall6Mgmt'] = new MenuGroup('AppointmentCityHall6Mgmt', 52 , 'AppointmentCityHall6', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall6'] = new SearchMenuNode('SearchAppointmentCityHall6', 'AppointmentCityHall6', $__comp_menus__['AppointmentCityHall6Mgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchNowAppointmentCityHall6'] = new OQLMenuNode('SearchNowAppointmentCityHall6', "SELECT AppointmentCityHall6 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['AppointmentCityHall6Mgmt']->GetIndex(), 30, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall6']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['AppointmentCityHall7Mgmt'] = new MenuGroup('AppointmentCityHall7Mgmt', 53 , 'AppointmentCityHall7', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall7'] = new SearchMenuNode('SearchAppointmentCityHall7', 'AppointmentCityHall7', $__comp_menus__['AppointmentCityHall7Mgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchNowAppointmentCityHall7'] = new OQLMenuNode('SearchNowAppointmentCityHall7', "SELECT AppointmentCityHall7 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['AppointmentCityHall7Mgmt']->GetIndex(), 30, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall7']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['AppointmentCityHall8Mgmt'] = new MenuGroup('AppointmentCityHall8Mgmt', 54 , 'AppointmentCityHall8', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall8'] = new SearchMenuNode('SearchAppointmentCityHall8', 'AppointmentCityHall8', $__comp_menus__['AppointmentCityHall8Mgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchNowAppointmentCityHall8'] = new OQLMenuNode('SearchNowAppointmentCityHall8', "SELECT AppointmentCityHall8 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['AppointmentCityHall8Mgmt']->GetIndex(), 30, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall8']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['AppointmentCityHall9Mgmt'] = new MenuGroup('AppointmentCityHall9Mgmt', 61 , 'AppointmentCityHall9', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall9'] = new SearchMenuNode('SearchAppointmentCityHall9', 'AppointmentCityHall9', $__comp_menus__['AppointmentCityHall9Mgmt']->GetIndex(), 10, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCityHall10'] = new SearchMenuNode('SearchAppointmentCityHall10', 'AppointmentCityHall10', $__comp_menus__['AppointmentCityHall9Mgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['ShortcutCityHall2'] = new TemplateMenuNode('ShortcutCityHall2', '', $__comp_menus__['AppointmentCityHall9Mgmt']->GetIndex(), 50 , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchNowAppointmentCityHall9'] = new OQLMenuNode('SearchNowAppointmentCityHall9', "SELECT AppointmentCityHall9 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCityHall2']->GetIndex(), 11, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall9']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['SearchNowAppointmentCityHall10'] = new OQLMenuNode('SearchNowAppointmentCityHall10', "SELECT AppointmentCityHall10 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCityHall2']->GetIndex(), 11, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowAppointmentCityHall10']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['AppointmentCareCenter1Mgmt'] = new MenuGroup('AppointmentCareCenter1Mgmt', 55 , 'AppointmentCareCenter1', UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCareCenter1'] = new SearchMenuNode('SearchAppointmentCareCenter1', 'AppointmentCareCenter1', $__comp_menus__['AppointmentCareCenter1Mgmt']->GetIndex(), 10, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCareCenter2'] = new SearchMenuNode('SearchAppointmentCareCenter2', 'AppointmentCareCenter2', $__comp_menus__['AppointmentCareCenter1Mgmt']->GetIndex(), 20, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCareCenter3'] = new SearchMenuNode('SearchAppointmentCareCenter3', 'AppointmentCareCenter3', $__comp_menus__['AppointmentCareCenter1Mgmt']->GetIndex(), 30, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCareCenter4'] = new SearchMenuNode('SearchAppointmentCareCenter4', 'AppointmentCareCenter4', $__comp_menus__['AppointmentCareCenter1Mgmt']->GetIndex(), 40, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchAppointmentCareCenter5'] = new SearchMenuNode('SearchAppointmentCareCenter5', 'AppointmentCareCenter5', $__comp_menus__['AppointmentCareCenter1Mgmt']->GetIndex(), 50, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['ShortcutCareCenter1'] = new TemplateMenuNode('ShortcutCareCenter1', '', $__comp_menus__['AppointmentCareCenter1Mgmt']->GetIndex(), 50 , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchNowCareCenter1'] = new OQLMenuNode('SearchNowCareCenter1', "SELECT AppointmentCareCenter1 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCareCenter1']->GetIndex(), 11, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowCareCenter1']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['SearchNowCareCenter2'] = new OQLMenuNode('SearchNowCareCenter2', "SELECT AppointmentCareCenter2 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCareCenter1']->GetIndex(), 16, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowCareCenter2']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['SearchNowCareCenter3'] = new OQLMenuNode('SearchNowCareCenter3', "SELECT AppointmentCareCenter3 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCareCenter1']->GetIndex(), 21, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowCareCenter3']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['SearchNowCareCenter4'] = new OQLMenuNode('SearchNowCareCenter4', "SELECT AppointmentCareCenter4 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCareCenter1']->GetIndex(), 26, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowCareCenter4']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['SearchNowCareCenter5'] = new OQLMenuNode('SearchNowCareCenter5', "SELECT AppointmentCareCenter5 WHERE start_date >= DATE_ADD(NOW(), INTERVAL -1 HOUR)", $__comp_menus__['ShortcutCareCenter1']->GetIndex(), 31, false , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SearchNowCareCenter5']->SetParameters(array('auto_reload' => "standard"));
	}
} // class MenuCreation_jd_appointments_mgmt
